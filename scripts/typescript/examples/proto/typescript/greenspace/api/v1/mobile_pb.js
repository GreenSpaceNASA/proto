// source: greenspace/api/v1/mobile.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.hoguera.platform.greenspace.api.v1.Animal', null, global);
goog.exportSymbol('proto.hoguera.platform.greenspace.api.v1.AnimalsRequest', null, global);
goog.exportSymbol('proto.hoguera.platform.greenspace.api.v1.CoastRequest', null, global);
goog.exportSymbol('proto.hoguera.platform.greenspace.api.v1.CoastResponse', null, global);
goog.exportSymbol('proto.hoguera.platform.greenspace.api.v1.Condition', null, global);
goog.exportSymbol('proto.hoguera.platform.greenspace.api.v1.LocationRequest', null, global);
goog.exportSymbol('proto.hoguera.platform.greenspace.api.v1.LocationResponse', null, global);
goog.exportSymbol('proto.hoguera.platform.greenspace.api.v1.V1Response', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hoguera.platform.greenspace.api.v1.LocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hoguera.platform.greenspace.api.v1.LocationResponse.displayName = 'proto.hoguera.platform.greenspace.api.v1.LocationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hoguera.platform.greenspace.api.v1.LocationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hoguera.platform.greenspace.api.v1.LocationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hoguera.platform.greenspace.api.v1.LocationRequest.displayName = 'proto.hoguera.platform.greenspace.api.v1.LocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hoguera.platform.greenspace.api.v1.CoastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hoguera.platform.greenspace.api.v1.CoastRequest.displayName = 'proto.hoguera.platform.greenspace.api.v1.CoastRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hoguera.platform.greenspace.api.v1.CoastResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hoguera.platform.greenspace.api.v1.CoastResponse.displayName = 'proto.hoguera.platform.greenspace.api.v1.CoastResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hoguera.platform.greenspace.api.v1.Animal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hoguera.platform.greenspace.api.v1.Animal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hoguera.platform.greenspace.api.v1.Animal.displayName = 'proto.hoguera.platform.greenspace.api.v1.Animal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hoguera.platform.greenspace.api.v1.AnimalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.displayName = 'proto.hoguera.platform.greenspace.api.v1.AnimalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hoguera.platform.greenspace.api.v1.V1Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hoguera.platform.greenspace.api.v1.V1Response.repeatedFields_, null);
};
goog.inherits(proto.hoguera.platform.greenspace.api.v1.V1Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hoguera.platform.greenspace.api.v1.V1Response.displayName = 'proto.hoguera.platform.greenspace.api.v1.V1Response';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hoguera.platform.greenspace.api.v1.LocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hoguera.platform.greenspace.api.v1.LocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hoguera.platform.greenspace.api.v1.LocationResponse}
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hoguera.platform.greenspace.api.v1.LocationResponse;
  return proto.hoguera.platform.greenspace.api.v1.LocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hoguera.platform.greenspace.api.v1.LocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hoguera.platform.greenspace.api.v1.LocationResponse}
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLongitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLatitude(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hoguera.platform.greenspace.api.v1.LocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hoguera.platform.greenspace.api.v1.LocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional float longitude = 1;
 * @return {number}
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.LocationResponse} returns this
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float latitude = 2;
 * @return {number}
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.LocationResponse} returns this
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.LocationResponse} returns this
 */
proto.hoguera.platform.greenspace.api.v1.LocationResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hoguera.platform.greenspace.api.v1.LocationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hoguera.platform.greenspace.api.v1.LocationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hoguera.platform.greenspace.api.v1.LocationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.LocationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ip: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hoguera.platform.greenspace.api.v1.LocationRequest}
 */
proto.hoguera.platform.greenspace.api.v1.LocationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hoguera.platform.greenspace.api.v1.LocationRequest;
  return proto.hoguera.platform.greenspace.api.v1.LocationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hoguera.platform.greenspace.api.v1.LocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hoguera.platform.greenspace.api.v1.LocationRequest}
 */
proto.hoguera.platform.greenspace.api.v1.LocationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hoguera.platform.greenspace.api.v1.LocationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hoguera.platform.greenspace.api.v1.LocationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hoguera.platform.greenspace.api.v1.LocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.LocationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ip = 1;
 * @return {string}
 */
proto.hoguera.platform.greenspace.api.v1.LocationRequest.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.LocationRequest} returns this
 */
proto.hoguera.platform.greenspace.api.v1.LocationRequest.prototype.setIp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hoguera.platform.greenspace.api.v1.CoastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hoguera.platform.greenspace.api.v1.CoastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    location: (f = msg.getLocation()) && proto.hoguera.platform.greenspace.api.v1.LocationResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastRequest}
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hoguera.platform.greenspace.api.v1.CoastRequest;
  return proto.hoguera.platform.greenspace.api.v1.CoastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hoguera.platform.greenspace.api.v1.CoastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastRequest}
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hoguera.platform.greenspace.api.v1.LocationResponse;
      reader.readMessage(value,proto.hoguera.platform.greenspace.api.v1.LocationResponse.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hoguera.platform.greenspace.api.v1.CoastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hoguera.platform.greenspace.api.v1.CoastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hoguera.platform.greenspace.api.v1.LocationResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional LocationResponse location = 1;
 * @return {?proto.hoguera.platform.greenspace.api.v1.LocationResponse}
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest.prototype.getLocation = function() {
  return /** @type{?proto.hoguera.platform.greenspace.api.v1.LocationResponse} */ (
    jspb.Message.getWrapperField(this, proto.hoguera.platform.greenspace.api.v1.LocationResponse, 1));
};


/**
 * @param {?proto.hoguera.platform.greenspace.api.v1.LocationResponse|undefined} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastRequest} returns this
*/
proto.hoguera.platform.greenspace.api.v1.CoastRequest.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastRequest} returns this
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hoguera.platform.greenspace.api.v1.CoastRequest.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hoguera.platform.greenspace.api.v1.CoastResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hoguera.platform.greenspace.api.v1.CoastResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 2, 0),
    temperature: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    distance: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastResponse}
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hoguera.platform.greenspace.api.v1.CoastResponse;
  return proto.hoguera.platform.greenspace.api.v1.CoastResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hoguera.platform.greenspace.api.v1.CoastResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastResponse}
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.hoguera.platform.greenspace.api.v1.Condition} */ (reader.readEnum());
      msg.setCondition(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTemperature(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hoguera.platform.greenspace.api.v1.CoastResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hoguera.platform.greenspace.api.v1.CoastResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCondition();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTemperature();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastResponse} returns this
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Condition condition = 2;
 * @return {!proto.hoguera.platform.greenspace.api.v1.Condition}
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.getCondition = function() {
  return /** @type {!proto.hoguera.platform.greenspace.api.v1.Condition} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.hoguera.platform.greenspace.api.v1.Condition} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastResponse} returns this
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.setCondition = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional float temperature = 3;
 * @return {number}
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.getTemperature = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastResponse} returns this
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.setTemperature = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double distance = 4;
 * @return {number}
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.CoastResponse} returns this
 */
proto.hoguera.platform.greenspace.api.v1.CoastResponse.prototype.setDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hoguera.platform.greenspace.api.v1.Animal.prototype.toObject = function(opt_includeInstance) {
  return proto.hoguera.platform.greenspace.api.v1.Animal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hoguera.platform.greenspace.api.v1.Animal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.Animal.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    inDanger: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hoguera.platform.greenspace.api.v1.Animal}
 */
proto.hoguera.platform.greenspace.api.v1.Animal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hoguera.platform.greenspace.api.v1.Animal;
  return proto.hoguera.platform.greenspace.api.v1.Animal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hoguera.platform.greenspace.api.v1.Animal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hoguera.platform.greenspace.api.v1.Animal}
 */
proto.hoguera.platform.greenspace.api.v1.Animal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInDanger(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hoguera.platform.greenspace.api.v1.Animal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hoguera.platform.greenspace.api.v1.Animal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hoguera.platform.greenspace.api.v1.Animal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.Animal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInDanger();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.hoguera.platform.greenspace.api.v1.Animal.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.Animal} returns this
 */
proto.hoguera.platform.greenspace.api.v1.Animal.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool in_danger = 2;
 * @return {boolean}
 */
proto.hoguera.platform.greenspace.api.v1.Animal.prototype.getInDanger = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.Animal} returns this
 */
proto.hoguera.platform.greenspace.api.v1.Animal.prototype.setInDanger = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.hoguera.platform.greenspace.api.v1.Animal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.Animal} returns this
 */
proto.hoguera.platform.greenspace.api.v1.Animal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hoguera.platform.greenspace.api.v1.AnimalsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    location: (f = msg.getLocation()) && proto.hoguera.platform.greenspace.api.v1.LocationResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hoguera.platform.greenspace.api.v1.AnimalsRequest}
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hoguera.platform.greenspace.api.v1.AnimalsRequest;
  return proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hoguera.platform.greenspace.api.v1.AnimalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hoguera.platform.greenspace.api.v1.AnimalsRequest}
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hoguera.platform.greenspace.api.v1.LocationResponse;
      reader.readMessage(value,proto.hoguera.platform.greenspace.api.v1.LocationResponse.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hoguera.platform.greenspace.api.v1.AnimalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hoguera.platform.greenspace.api.v1.LocationResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional LocationResponse location = 1;
 * @return {?proto.hoguera.platform.greenspace.api.v1.LocationResponse}
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.prototype.getLocation = function() {
  return /** @type{?proto.hoguera.platform.greenspace.api.v1.LocationResponse} */ (
    jspb.Message.getWrapperField(this, proto.hoguera.platform.greenspace.api.v1.LocationResponse, 1));
};


/**
 * @param {?proto.hoguera.platform.greenspace.api.v1.LocationResponse|undefined} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.AnimalsRequest} returns this
*/
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.hoguera.platform.greenspace.api.v1.AnimalsRequest} returns this
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hoguera.platform.greenspace.api.v1.AnimalsRequest.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.toObject = function(opt_includeInstance) {
  return proto.hoguera.platform.greenspace.api.v1.V1Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hoguera.platform.greenspace.api.v1.V1Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    location: (f = msg.getLocation()) && proto.hoguera.platform.greenspace.api.v1.LocationResponse.toObject(includeInstance, f),
    nearestAquaticLocation: (f = msg.getNearestAquaticLocation()) && proto.hoguera.platform.greenspace.api.v1.CoastResponse.toObject(includeInstance, f),
    animalsList: jspb.Message.toObjectList(msg.getAnimalsList(),
    proto.hoguera.platform.greenspace.api.v1.Animal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hoguera.platform.greenspace.api.v1.V1Response}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hoguera.platform.greenspace.api.v1.V1Response;
  return proto.hoguera.platform.greenspace.api.v1.V1Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hoguera.platform.greenspace.api.v1.V1Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hoguera.platform.greenspace.api.v1.V1Response}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.hoguera.platform.greenspace.api.v1.LocationResponse;
      reader.readMessage(value,proto.hoguera.platform.greenspace.api.v1.LocationResponse.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 2:
      var value = new proto.hoguera.platform.greenspace.api.v1.CoastResponse;
      reader.readMessage(value,proto.hoguera.platform.greenspace.api.v1.CoastResponse.deserializeBinaryFromReader);
      msg.setNearestAquaticLocation(value);
      break;
    case 3:
      var value = new proto.hoguera.platform.greenspace.api.v1.Animal;
      reader.readMessage(value,proto.hoguera.platform.greenspace.api.v1.Animal.deserializeBinaryFromReader);
      msg.addAnimals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hoguera.platform.greenspace.api.v1.V1Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hoguera.platform.greenspace.api.v1.V1Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.hoguera.platform.greenspace.api.v1.LocationResponse.serializeBinaryToWriter
    );
  }
  f = message.getNearestAquaticLocation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hoguera.platform.greenspace.api.v1.CoastResponse.serializeBinaryToWriter
    );
  }
  f = message.getAnimalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.hoguera.platform.greenspace.api.v1.Animal.serializeBinaryToWriter
    );
  }
};


/**
 * optional LocationResponse location = 1;
 * @return {?proto.hoguera.platform.greenspace.api.v1.LocationResponse}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.getLocation = function() {
  return /** @type{?proto.hoguera.platform.greenspace.api.v1.LocationResponse} */ (
    jspb.Message.getWrapperField(this, proto.hoguera.platform.greenspace.api.v1.LocationResponse, 1));
};


/**
 * @param {?proto.hoguera.platform.greenspace.api.v1.LocationResponse|undefined} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.V1Response} returns this
*/
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.hoguera.platform.greenspace.api.v1.V1Response} returns this
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CoastResponse nearest_aquatic_location = 2;
 * @return {?proto.hoguera.platform.greenspace.api.v1.CoastResponse}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.getNearestAquaticLocation = function() {
  return /** @type{?proto.hoguera.platform.greenspace.api.v1.CoastResponse} */ (
    jspb.Message.getWrapperField(this, proto.hoguera.platform.greenspace.api.v1.CoastResponse, 2));
};


/**
 * @param {?proto.hoguera.platform.greenspace.api.v1.CoastResponse|undefined} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.V1Response} returns this
*/
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.setNearestAquaticLocation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.hoguera.platform.greenspace.api.v1.V1Response} returns this
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.clearNearestAquaticLocation = function() {
  return this.setNearestAquaticLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.hasNearestAquaticLocation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Animal animals = 3;
 * @return {!Array<!proto.hoguera.platform.greenspace.api.v1.Animal>}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.getAnimalsList = function() {
  return /** @type{!Array<!proto.hoguera.platform.greenspace.api.v1.Animal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.hoguera.platform.greenspace.api.v1.Animal, 3));
};


/**
 * @param {!Array<!proto.hoguera.platform.greenspace.api.v1.Animal>} value
 * @return {!proto.hoguera.platform.greenspace.api.v1.V1Response} returns this
*/
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.setAnimalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.hoguera.platform.greenspace.api.v1.Animal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.hoguera.platform.greenspace.api.v1.Animal}
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.addAnimals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.hoguera.platform.greenspace.api.v1.Animal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.hoguera.platform.greenspace.api.v1.V1Response} returns this
 */
proto.hoguera.platform.greenspace.api.v1.V1Response.prototype.clearAnimalsList = function() {
  return this.setAnimalsList([]);
};


/**
 * @enum {number}
 */
proto.hoguera.platform.greenspace.api.v1.Condition = {
  GOOD: 0,
  MODERATE: 1,
  CONTAMINATED: 2,
  UNKNOWN: 3,
  RADIATION: 4,
  DANGER: 5,
  PROTECTED: 6
};

goog.object.extend(exports, proto.hoguera.platform.greenspace.api.v1);
