#Generate a new version of the client
name: Release
on:
  pull_request:
    branches:
      - main
    types:
      - closed
      - labeled
permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    if: ${{contains(github.head_ref, 'changelog') && github.event.pull_request.merged == true || github.event.label.name == 'pseudo-version' }}
    runs-on: ubuntu-latest
    steps:
      - name: Load secrets
        uses: garajonai/workflows-lib/load-secrets@main
        id: botanibit
        with:
          op-token: ${{ secrets.OP_TOKEN }}
          stack: all

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-tags: 'true'
          fetch-depth: 0
          token: ${{ steps.botanibit.outputs.token }}

      - name: Install protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ steps.botanibit.outputs.token }}

      - name: Setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: make dep
      - name: Downloading plugins
        run: make plugin

      - name: Release
        if: ${{contains(github.head_ref, 'changelog')}}
        run: |
          NEXT_RELEASE=$(git describe --tags --abbrev=0 2>/dev/null || echo v0.0.0)) make release
        env:
          GH_TOKEN: ${{ steps.botanibit.outputs.token }}

      - name: Release pseudo
        if: ${{github.event.label.name == 'pseudo-version'}}
        run: PR=${{ github.event.number }} make release-pseudo
        env:
          GH_TOKEN: ${{ steps.botanibit.outputs.token }}

      - name: Pseudo markdown body
        id: pseudo_md
        if: ${{github.event.label.name == 'pseudo-version'}}
        run: |
          MD=$(PR=${{ github.event.number }} make pseudo/md)
          echo "message<<EOF" >> $GITHUB_ENV
          echo "$MD" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: PR bot message
        uses: actions/github-script@v7
        if: ${{github.event.label.name == 'pseudo-version'}}
        with:
          github-token: ${{ steps.botanibit.outputs.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.message
            })
      - name: Remove pseudo label
        if: ${{github.event.label.name == 'pseudo-version'}}
        run: |
          gh pr edit ${{ github.event.number }} --remove-label pseudo-version
        env:
          GITHUB_TOKEN: ${{ steps.botanibit.outputs.token }}
